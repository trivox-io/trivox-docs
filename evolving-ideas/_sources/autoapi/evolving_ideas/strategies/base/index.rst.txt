evolving_ideas.strategies.base
==============================

.. py:module:: evolving_ideas.strategies.base

.. autoapi-nested-parse::

   evolving_ideas.strategies.base



Classes
-------

.. autoapisummary::

   evolving_ideas.strategies.base.MethodStrategy


Module Contents
---------------

.. py:class:: MethodStrategy(llm_responder: evolving_ideas.infra.responder.LLMResponder, builder: Optional[evolving_ideas.prompts.builder.PromptBuilder] = None, chat_logger: Optional[evolving_ideas.interface.presenters.ChatLogger] = None)

   Bases: :py:obj:`abc.ABC`


   Abstract base class for strategy methods in the evolving ideas application.
   This class defines the interface for all strategy methods that can be implemented
   for generating and evolving ideas.


   .. py:attribute:: builder
      :type:  evolving_ideas.prompts.builder.PromptBuilder


   .. py:attribute:: llm_responder


   .. py:attribute:: logger


   .. py:method:: run(role: str, task: str, context: str) -> dict
      :abstractmethod:


      Abstract method to run the strategy with the given parameters.

      :param role: The role of the AI.
      :type role: str
      :param task: The task to be performed.
      :type task: str
      :param context: Context for the idea.
      :type context: str

      :return: A dictionary containing the results of the strategy.
      :rtype: dict



